	component my_nios1 is
		port (
			clk_clk                                      : in    std_logic                     := 'X';             -- clk
			fifoed_avalon_uart_0_external_connection_rxd : in    std_logic                     := 'X';             -- rxd
			fifoed_avalon_uart_0_external_connection_txd : out   std_logic;                                        -- txd
			leds_export                                  : out   std_logic_vector(7 downto 0);                     -- export
			mm_read_only_0                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 0
			mm_read_only_1                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 1
			mm_read_only_2                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 2
			mm_read_only_3                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 3
			mm_read_only_4                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 4
			mm_read_only_5                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 5
			mm_read_only_6                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 6
			mm_read_only_7                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 7
			mm_read_only_8                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 8
			mm_read_only_9                               : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 9
			mm_read_only_10                              : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 10
			mm_read_only_11                              : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 11
			mm_read_only_12                              : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 12
			mm_read_only_13                              : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 13
			mm_read_only_14                              : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 14
			mm_read_only_15                              : in    std_logic_vector(31 downto 0) := (others => 'X'); -- 15
			mm_read_write_dataout_0                      : out   std_logic_vector(31 downto 0);                    -- dataout_0
			mm_read_write_dataout_1                      : out   std_logic_vector(31 downto 0);                    -- dataout_1
			mm_read_write_dataout_2                      : out   std_logic_vector(31 downto 0);                    -- dataout_2
			mm_read_write_dataout_3                      : out   std_logic_vector(31 downto 0);                    -- dataout_3
			mm_read_write_dataout_4                      : out   std_logic_vector(31 downto 0);                    -- dataout_4
			mm_read_write_dataout_5                      : out   std_logic_vector(31 downto 0);                    -- dataout_5
			mm_read_write_dataout_6                      : out   std_logic_vector(31 downto 0);                    -- dataout_6
			mm_read_write_dataout_7                      : out   std_logic_vector(31 downto 0);                    -- dataout_7
			mm_read_write_dataout_8                      : out   std_logic_vector(31 downto 0);                    -- dataout_8
			mm_read_write_dataout_9                      : out   std_logic_vector(31 downto 0);                    -- dataout_9
			mm_read_write_dataout_10                     : out   std_logic_vector(31 downto 0);                    -- dataout_10
			mm_read_write_dataout_11                     : out   std_logic_vector(31 downto 0);                    -- dataout_11
			mm_read_write_dataout_12                     : out   std_logic_vector(31 downto 0);                    -- dataout_12
			mm_read_write_dataout_13                     : out   std_logic_vector(31 downto 0);                    -- dataout_13
			mm_read_write_dataout_14                     : out   std_logic_vector(31 downto 0);                    -- dataout_14
			mm_read_write_dataout_15                     : out   std_logic_vector(31 downto 0);                    -- dataout_15
			mm_read_write_datain_0                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_0
			mm_read_write_datain_1                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_1
			mm_read_write_datain_2                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_2
			mm_read_write_datain_3                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_3
			mm_read_write_datain_4                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_4
			mm_read_write_datain_5                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_5
			mm_read_write_datain_6                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_6
			mm_read_write_datain_7                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_7
			mm_read_write_datain_8                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_8
			mm_read_write_datain_9                       : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_9
			mm_read_write_datain_10                      : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_10
			mm_read_write_datain_11                      : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_11
			mm_read_write_datain_12                      : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_12
			mm_read_write_datain_13                      : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_13
			mm_read_write_datain_14                      : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_14
			mm_read_write_datain_15                      : in    std_logic_vector(31 downto 0) := (others => 'X'); -- datain_15
			reset_reset_n                                : in    std_logic                     := 'X';             -- reset_n
			sdram_addr                                   : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_ba                                     : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_cas_n                                  : out   std_logic;                                        -- cas_n
			sdram_cke                                    : out   std_logic;                                        -- cke
			sdram_cs_n                                   : out   std_logic;                                        -- cs_n
			sdram_dq                                     : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_dqm                                    : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_ras_n                                  : out   std_logic;                                        -- ras_n
			sdram_we_n                                   : out   std_logic;                                        -- we_n
			sdram_clk_clk                                : out   std_logic;                                        -- clk
			switches_export                              : in    std_logic_vector(7 downto 0)  := (others => 'X')  -- export
		);
	end component my_nios1;

